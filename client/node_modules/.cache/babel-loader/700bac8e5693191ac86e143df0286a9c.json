{"ast":null,"code":"var _jsxFileName = \"/Users/gauthierdelalleau/Desktop/weather-app/client/src/App.js\";\nimport React, { useState, useEffect, Suspense } from 'react';\nimport axios from \"axios\";\nimport Loader from \"./components/Loader.js\";\nimport './App.css';\nconst Background = React.lazy(() => import(\"./components/Background.js\"));\nconst Time = React.lazy(() => import(\"./components/Time.js\"));\nconst Moon = React.lazy(() => import(\"./components/Moon.js\"));\nconst Forecast = React.lazy(() => import(\"./components/Forecast.js\"));\nconst Today = React.lazy(() => import(\"./components/Today.js\"));\nconst Hourly = React.lazy(() => import(\"./components/Hourly.js\"));\nconst Daily = React.lazy(() => import(\"./components/Daily.js\"));\n\nfunction App() {\n  // State\n  const [init, setInit] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [time, setTime] = useState(\"\");\n  const [hour, setHour] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [daily, setDaily] = useState(\"\");\n  const [hourly, setHourly] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n  const [zone, setZone] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [msg, setMsg] = useState(\"Initialising App....\");\n  useEffect(() => {\n    // Get Location\n    const getLocation = () => {\n      const randomCoords = [{\n        name: \"Paris, France\",\n        lat: \"48.856613\",\n        long: \"2.352222\"\n      }, {\n        name: \"Moscow, Russia\",\n        lat: \"55.755825\",\n        long: \"37.617298\"\n      }, {\n        name: \"New York, USA\",\n        lat: \"40.713051\",\n        long: \"-74.007233\"\n      }, {\n        name: \"Stockholm, Sweden\",\n        lat: \"59.329323\",\n        long: \"18.068581\"\n      }, {\n        name: \"Tokyo, Japan\",\n        lat: \"35.6828387\",\n        long: \"139.7594549\"\n      }, {\n        name: \"Wuhan, China\",\n        lat: \"30.5951051\",\n        long: \"114.2999353\"\n      }, {\n        name: \"Sydney, Australia\",\n        lat: \"-33.8548157\",\n        long: \"151.2164539\"\n      }, {\n        name: \"Brasilia, Brazil\",\n        lat: \"-15.7934036\",\n        long: \"-47.8823172\"\n      }];\n      const randInt = Math.floor(Math.random() * randomCoords.length);\n      const place = randomCoords[randInt];\n\n      const success = position => {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        setMsg(\"Location found, updating forecast...\");\n        setTimeout(() => {\n          setInit(true);\n          setTimeout(() => {\n            setLoaded(true);\n          }, 10000);\n        }, 1000); // Passes location values to Weather API\n\n        postWeather(latitude, longitude);\n      };\n\n      const error = () => {\n        setMsg(\"Privacy is important, Here's a random weather forecast\");\n        getWeather(place.lat, place.long);\n        postWeather(place.la, place.long);\n        setTimeout(() => {\n          setInit(true);\n          setTimeout(() => {\n            setLoaded(true);\n          }, 10000);\n        }, 1000);\n      };\n\n      if (!navigator.geolocation) {\n        setMsg(\"Geolocation is off, here's a random weather forecast\");\n        getWeather(place.lat, place.long);\n        postWeather(place.la, place.long);\n        setTimeout(() => {\n          setInit(true);\n          setTimeout(() => {\n            setLoaded(true);\n          }, 10000);\n        }, 1000);\n      } else {\n        setMsg(\"Determining your location...\");\n        navigator.geolocation.getCurrentPosition(success, error, {\n          enableHighAccuracy: true,\n          maximumAge: 10000\n        });\n      }\n    }; // Get Current Time\n\n\n    const getTime = () => {\n      // Variables\n      const date = new Date();\n      let hour = setNum(date.getHours());\n      let minute = setNum(date.getMinutes());\n      let second = setNum(date.getSeconds());\n      const day = date.getDay();\n      let dayMonth = setNum(date.getDate());\n      const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]; // Set State\n\n      setTime(`${hour} : ${minute} : ${second}`);\n      setDay(`${days[day]}, ${dayMonth}`);\n      setHour(parseInt(hour));\n    };\n\n    const postWeather = (lat, long) => {\n      console.log(\"Hello world\");\n      axios.post(\"http://localhost:5000/coords\", {\n        lat: lat,\n        long: long\n      });\n      console.log(\"data sent\");\n    }; // Fetch weather from API / Set state\n\n\n    const getWeather = async (latitude, longitude) => {// const forecast = await axios.get(``);\n      // const zone = forecast.data.timezone;\n      // const timezone = zone.replace(\"/\", \", \").replace(\"_\", \" \");\n      // setWeather(forecast.data.currently);\n      // setDaily(forecast.data.daily);\n      // setHourly(forecast.data.hourly);\n      // setZone(timezone);\n      // setTemp(fToC(forecast.data.currently.temperature));\n    };\n\n    getLocation();\n    setInterval(() => {\n      getTime();\n    }, 1000);\n  }, []); // Fahrenheit to Celsius\n\n  const fToC = temp => {\n    const celsius = Math.floor((temp - 32) / 1.8);\n    return celsius;\n  }; // Render hourly forecast list\n\n\n  const renderHourly = () => {\n    if (hourly.data !== undefined) {\n      let rendered = hourly.data.map((hour, i) => {\n        return React.createElement(Hourly, {\n          hour: hour,\n          fToC: fToC,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        });\n      });\n      return rendered;\n    }\n  }; // Render daily forecast list\n\n\n  const renderDaily = () => {\n    if (daily.data !== undefined) {\n      let rendered = daily.data.map((day, i) => {\n        return React.createElement(Daily, {\n          day: day,\n          fToC: fToC,\n          key: i,\n          i: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        });\n      });\n      return rendered;\n    }\n  }; // Render Moon\n\n\n  const renderMoon = () => {\n    if (daily.data !== undefined) {\n      let moon = React.createElement(Moon, {\n        moonPhase: daily.data[0].moonPhase,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      });\n      return moon;\n    }\n  };\n\n  const renderBackground = () => {\n    let link;\n\n    switch (true) {\n      // Clear morning\n      case hour >= 5 && hour <= 9 && weather.icon === \"clear-day\":\n        link = \"clear-morning.jpg\";\n        break;\n      // Partly cloudy morning\n\n      case hour >= 5 && hour <= 9 && weather.icon === \"partly-cloudy-day\":\n        link = \"clear-morning.jpg\";\n        break;\n      // Clear day\n\n      case hour >= 10 && hour <= 18 && weather.icon === \"clear-day\":\n        link = \"clear-day.jpg\";\n        break;\n      // Partly cloudy day\n\n      case hour >= 10 && hour <= 18 && weather.icon === \"partly-cloudy-day\":\n        link = \"clear-day.jpg\";\n        break;\n      // Rainy day\n\n      case hour >= 10 && hour <= 18 && weather.icon === \"rain\":\n        link = \"rain-day.jpg\";\n        break;\n      // Cloudy day / morning\n\n      case hour >= 5 && hour <= 18 && weather.icon === \"cloudy\":\n        link = \"cloudy.jpg\";\n        break;\n      // Rainy night\n\n      case hour >= 19 && hour <= 4 && weather.icon === \"rain\":\n        link = \"rain-night.jpg\";\n        break;\n      // Cloudy night\n\n      case hour >= 19 && hour <= 4 && weather.icon === \"cloudy\":\n        link = \"cloudy-night.jpg\";\n        break;\n      // Snowy day\n\n      case hour >= 5 && hour <= 18 && weather.icon === \"snow\":\n        link = \"snow.jpg\";\n        break;\n      // Sleet day\n\n      case hour >= 5 && hour <= 18 && weather.icon === \"sleet\":\n        link = \"rain-day.jpg\";\n        break;\n      // Sleet night\n\n      case hour >= 19 && hour <= 4 && weather.icon === \"sleet\":\n        link = \"rain-night.jpg\";\n        break;\n      // Default day\n\n      case hour >= 5 && hour <= 18:\n        link = \"clear-day.jpg\";\n        break;\n      // Default night\n\n      case hour >= 19:\n        link = \"clear-night.jpg\";\n        break;\n    }\n\n    return React.createElement(Background, {\n      link: link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    });\n  }; // Changes single digit number into double. ie: 1 => 01\n\n\n  const setNum = num => {\n    let number = num;\n\n    switch (num) {\n      case 0:\n        number = \"00\";\n        break;\n\n      case 1:\n        number = \"01\";\n        break;\n\n      case 2:\n        number = \"02\";\n        break;\n\n      case 3:\n        number = \"03\";\n        break;\n\n      case 4:\n        number = \"04\";\n        break;\n\n      case 5:\n        number = \"05\";\n        break;\n\n      case 6:\n        number = \"06\";\n        break;\n\n      case 7:\n        number = \"07\";\n        break;\n\n      case 8:\n        number = \"08\";\n        break;\n\n      case 9:\n        number = \"09\";\n        break;\n    }\n\n    return number;\n  };\n\n  return React.createElement(React.Fragment, null, !loaded && React.createElement(Loader, {\n    msg: msg,\n    anim: init ? init : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }), React.createElement(Suspense, {\n    fallback: \"Loading...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, renderBackground(), React.createElement(\"div\", {\n    className: \"interface\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, React.createElement(Time, {\n    time: time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }), renderMoon(), React.createElement(Forecast, {\n    weather: weather,\n    zone: zone,\n    temp: temp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }), React.createElement(Today, {\n    day: day,\n    daily: daily,\n    fToC: fToC,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"hourly-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, renderHourly()), React.createElement(\"div\", {\n    className: \"daily-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, renderDaily()), React.createElement(\"footer\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://darksky.net/dev\",\n    rel: \"noopener noreferrer\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, \"Powered By Dark Sky API\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://www.gautdel.com\",\n    rel: \"noopener noreferrer\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, \"GautDel\"))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gauthierdelalleau/Desktop/weather-app/client/src/App.js"],"names":["React","useState","useEffect","Suspense","axios","Loader","Background","lazy","Time","Moon","Forecast","Today","Hourly","Daily","App","init","setInit","loaded","setLoaded","time","setTime","hour","setHour","day","setDay","daily","setDaily","hourly","setHourly","weather","setWeather","zone","setZone","temp","setTemp","msg","setMsg","getLocation","randomCoords","name","lat","long","randInt","Math","floor","random","length","place","success","position","latitude","coords","longitude","setTimeout","postWeather","error","getWeather","la","navigator","geolocation","getCurrentPosition","enableHighAccuracy","maximumAge","getTime","date","Date","setNum","getHours","minute","getMinutes","second","getSeconds","getDay","dayMonth","getDate","days","parseInt","console","log","post","setInterval","fToC","celsius","renderHourly","data","undefined","rendered","map","i","renderDaily","renderMoon","moon","moonPhase","renderBackground","link","icon","num","number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Suspense } from 'react';\nimport axios from \"axios\";\nimport Loader from \"./components/Loader.js\";\nimport './App.css';\n\nconst Background = React.lazy(() => import(\"./components/Background.js\"))\nconst Time = React.lazy(() => import(\"./components/Time.js\"))\nconst Moon = React.lazy(() => import(\"./components/Moon.js\"))\nconst Forecast = React.lazy(() => import(\"./components/Forecast.js\"))\nconst Today = React.lazy(() => import(\"./components/Today.js\"))\nconst Hourly = React.lazy(() => import(\"./components/Hourly.js\"))\nconst Daily = React.lazy(() => import(\"./components/Daily.js\"))\n\n\nfunction App() {\n\n  // State\n  const [init, setInit] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [time, setTime] = useState(\"\");\n  const [hour, setHour] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [daily, setDaily] = useState(\"\");\n  const [hourly, setHourly] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n  const [zone, setZone] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [msg, setMsg] = useState(\"Initialising App....\");\n\n  useEffect(() => {\n\n    // Get Location\n    const getLocation = () => {\n      const randomCoords = [\n        {\n          name: \"Paris, France\",\n          lat: \"48.856613\",\n          long: \"2.352222\",\n        },\n        {\n          name: \"Moscow, Russia\",\n          lat: \"55.755825\",\n          long: \"37.617298\",\n        },\n        {\n          name: \"New York, USA\",\n          lat: \"40.713051\",\n          long: \"-74.007233\",\n        },\n        {\n          name: \"Stockholm, Sweden\",\n          lat: \"59.329323\",\n          long: \"18.068581\",\n        },\n        {\n          name: \"Tokyo, Japan\",\n          lat: \"35.6828387\",\n          long: \"139.7594549\",\n        },\n        {\n          name: \"Wuhan, China\",\n          lat: \"30.5951051\",\n          long: \"114.2999353\",\n        },\n        {\n          name: \"Sydney, Australia\",\n          lat: \"-33.8548157\",\n          long: \"151.2164539\",\n        },\n        {\n          name: \"Brasilia, Brazil\",\n          lat: \"-15.7934036\",\n          long: \"-47.8823172\",\n        }\n      ]\n\n      const randInt = Math.floor(Math.random() * randomCoords.length);\n      const place = randomCoords[randInt];\n\n\n      const success = (position) => {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        setMsg(\"Location found, updating forecast...\");\n        setTimeout(() => {\n          setInit(true);\n          setTimeout(() => {\n            setLoaded(true);\n          }, 10000);\n        }, 1000);\n\n        // Passes location values to Weather API\n        postWeather(latitude, longitude);\n      }\n\n      const error = () => {\n        setMsg(\"Privacy is important, Here's a random weather forecast\");\n        getWeather(place.lat, place.long);\n        postWeather(place.la, place.long);\n\n        setTimeout(() => {\n          setInit(true);\n          setTimeout(() => {\n            setLoaded(true);\n          }, 10000);\n        }, 1000);\n      }\n\n      if (!navigator.geolocation) {\n        setMsg(\"Geolocation is off, here's a random weather forecast\");\n        getWeather(place.lat, place.long);\n        postWeather(place.la, place.long);\n\n        setTimeout(() => {\n          setInit(true);\n          setTimeout(() => {\n            setLoaded(true);\n          }, 10000);\n        }, 1000);\n      } else {\n        setMsg(\"Determining your location...\");\n        navigator.geolocation.getCurrentPosition(success, error, { enableHighAccuracy: true, maximumAge: 10000 });\n      }\n    }\n\n    // Get Current Time\n    const getTime = () => {\n\n      // Variables\n      const date = new Date();\n      let hour = setNum(date.getHours());\n      let minute = setNum(date.getMinutes());\n      let second = setNum(date.getSeconds());\n      const day = date.getDay();\n      let dayMonth = setNum(date.getDate());\n      const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n\n      // Set State\n      setTime(`${hour} : ${minute} : ${second}`);\n      setDay(`${days[day]}, ${dayMonth}`);\n      setHour(parseInt(hour));\n    };\n\n    const postWeather = (lat, long) => {\n      console.log(\"Hello world\")\n\n      axios.post(\"http://localhost:5000/coords\", {\n        lat: lat,\n        long: long\n      })\n\n      console.log(\"data sent\")\n    }\n\n\n    // Fetch weather from API / Set state\n    const getWeather = async (latitude, longitude) => {\n      // const forecast = await axios.get(``);\n      // const zone = forecast.data.timezone;\n      // const timezone = zone.replace(\"/\", \", \").replace(\"_\", \" \");\n\n      // setWeather(forecast.data.currently);\n      // setDaily(forecast.data.daily);\n      // setHourly(forecast.data.hourly);\n      // setZone(timezone);\n      // setTemp(fToC(forecast.data.currently.temperature));\n    }\n\n    getLocation();\n\n    setInterval(() => {\n      getTime();\n    }, 1000);\n  }, []);\n\n  // Fahrenheit to Celsius\n  const fToC = (temp) => {\n    const celsius = Math.floor((temp - 32) / 1.8);\n    return celsius;\n  }\n\n  // Render hourly forecast list\n  const renderHourly = () => {\n    if (hourly.data !== undefined) {\n      let rendered = hourly.data.map((hour, i) => {\n        return <Hourly hour={hour} fToC={fToC} key={i} />\n      })\n      return rendered;\n    }\n  }\n\n  // Render daily forecast list\n  const renderDaily = () => {\n    if (daily.data !== undefined) {\n      let rendered = daily.data.map((day, i) => {\n        return <Daily day={day} fToC={fToC} key={i} i={i} />\n      })\n      return rendered;\n    }\n  }\n\n  // Render Moon\n  const renderMoon = () => {\n    if (daily.data !== undefined) {\n      let moon = <Moon moonPhase={daily.data[0].moonPhase} />\n      return moon;\n    }\n\n  }\n\n  const renderBackground = () => {\n    let link;\n\n    switch (true) {\n      // Clear morning\n      case (hour >= 5 && hour <= 9 && weather.icon === \"clear-day\"): link = \"clear-morning.jpg\";\n        break;\n\n      // Partly cloudy morning\n      case (hour >= 5 && hour <= 9 && weather.icon === \"partly-cloudy-day\"): link = \"clear-morning.jpg\";\n        break;\n\n      // Clear day\n      case (hour >= 10 && hour <= 18 && weather.icon === \"clear-day\"): link = \"clear-day.jpg\";\n        break;\n\n      // Partly cloudy day\n      case (hour >= 10 && hour <= 18 && weather.icon === \"partly-cloudy-day\"): link = \"clear-day.jpg\";\n        break;\n\n      // Rainy day\n      case (hour >= 10 && hour <= 18 && weather.icon === \"rain\"): link = \"rain-day.jpg\";\n        break;\n\n      // Cloudy day / morning\n      case (hour >= 5 && hour <= 18 && weather.icon === \"cloudy\"): link = \"cloudy.jpg\";\n        break;\n\n      // Rainy night\n      case (hour >= 19 && hour <= 4 && weather.icon === \"rain\"): link = \"rain-night.jpg\";\n        break;\n\n      // Cloudy night\n      case (hour >= 19 && hour <= 4 && weather.icon === \"cloudy\"): link = \"cloudy-night.jpg\";\n        break;\n\n      // Snowy day\n      case (hour >= 5 && hour <= 18 && weather.icon === \"snow\"): link = \"snow.jpg\";\n        break;\n\n      // Sleet day\n      case (hour >= 5 && hour <= 18 && weather.icon === \"sleet\"): link = \"rain-day.jpg\";\n        break;\n\n      // Sleet night\n      case (hour >= 19 && hour <= 4 && weather.icon === \"sleet\"): link = \"rain-night.jpg\";\n        break;\n\n      // Default day\n      case (hour >= 5 && hour <= 18): link = \"clear-day.jpg\";\n        break;\n\n      // Default night\n      case (hour >= 19): link = \"clear-night.jpg\";\n        break;\n    }\n\n    return <Background link={link} />\n  }\n\n  // Changes single digit number into double. ie: 1 => 01\n  const setNum = (num) => {\n    let number = num;\n    switch (num) {\n      case 0: number = \"00\";\n        break;\n      case 1: number = \"01\";\n        break;\n      case 2: number = \"02\";\n        break;\n      case 3: number = \"03\";\n        break;\n      case 4: number = \"04\";\n        break;\n      case 5: number = \"05\";\n        break;\n      case 6: number = \"06\";\n        break;\n      case 7: number = \"07\";\n        break;\n      case 8: number = \"08\";\n        break;\n      case 9: number = \"09\";\n        break;\n    }\n\n    return number;\n  }\n\n  return (\n    <>\n      {!loaded && <Loader msg={msg} anim={init ? init : \"\"} />}\n\n      <Suspense fallback=\"Loading...\">\n        {renderBackground()}\n        <div className=\"interface\">\n          <Time time={time} />\n          {renderMoon()}\n          <Forecast weather={weather} zone={zone} temp={temp} />\n          <Today day={day} daily={daily} fToC={fToC} />\n          <div className=\"hourly-container\">\n            {renderHourly()}\n          </div>\n          <div className=\"daily-container\">\n            {renderDaily()}\n          </div>\n          <footer>\n            <div>\n              <a href=\"https://darksky.net/dev\" rel=\"noopener noreferrer\" target=\"_blank\">Powered By Dark Sky API</a>\n            </div>\n            <div><a href=\"https://www.gautdel.com\" rel=\"noopener noreferrer\" target=\"_blank\">GautDel</a></div>\n          </footer>\n        </div>\n      </Suspense>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}