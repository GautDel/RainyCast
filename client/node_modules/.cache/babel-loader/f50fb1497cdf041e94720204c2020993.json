{"ast":null,"code":"var _jsxFileName = \"/Users/gauthierdelalleau/Desktop/weather-app/src/components/Daily.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Daily = ({\n  day,\n  fToC,\n  index\n}) => {\n  const [date, setDate] = useState(\"\");\n  useEffect(() => {\n    getDay(day.time);\n  }, []);\n\n  const getDay = time => {\n    const day = new Date(time * 1000).getDay();\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    console.log(index);\n\n    if (day === 0) {\n      setDate(\"Today\");\n    } else {\n      setDate(days[day]);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, date));\n};\n\nexport default Daily;","map":{"version":3,"sources":["/Users/gauthierdelalleau/Desktop/weather-app/src/components/Daily.js"],"names":["React","useState","useEffect","Daily","day","fToC","index","date","setDate","getDay","time","Date","days","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,CAAD,KAA0B;AACtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,MAAM,CAACL,GAAG,CAACM,IAAL,CAAN;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMD,MAAM,GAAIC,IAAD,IAAU;AACvB,UAAMN,GAAG,GAAG,IAAIO,IAAJ,CAASD,IAAI,GAAG,IAAhB,EAAsBD,MAAtB,EAAZ;AACA,UAAMG,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAb;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;;AAEA,QAAIF,GAAG,KAAK,CAAZ,EAAe;AAEbI,MAAAA,OAAO,CAAC,OAAD,CAAP;AACD,KAHD,MAGO;AACLA,MAAAA,OAAO,CAACI,IAAI,CAACR,GAAD,CAAL,CAAP;AACD;AAGF,GAdD;;AAeA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,IAAL,CADF,CADF;AAKD,CA3BD;;AA6BA,eAAeJ,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst Daily = ({ day, fToC, index }) => {\n  const [date, setDate] = useState(\"\");\n\n  useEffect(() => {\n    getDay(day.time);\n  }, [])\n\n  const getDay = (time) => {\n    const day = new Date(time * 1000).getDay();\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    console.log(index)\n\n    if (day === 0) {\n\n      setDate(\"Today\")\n    } else {\n      setDate(days[day]);\n    }\n\n\n  }\n  return (\n    <div>\n      <h6>{date}</h6>\n    </div>\n  )\n}\n\nexport default Daily;\n"]},"metadata":{},"sourceType":"module"}