{"ast":null,"code":"var _jsxFileName = \"/Users/gauthierdelalleau/Desktop/weather-app/src/components/Hourly.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Hourly = ({\n  hour,\n  fToC\n}) => {\n  const [time] = useState(new Date(hour.time * 1000));\n  const [compHour] = useState(time.getHours());\n  const [icon, setIcon] = useState(\"default-cloud.png\");\n  useEffect(() => {\n    getIcon(hour.icon);\n  }, []);\n\n  const getIcon = icon => {\n    let link = \"default-cloud.png\";\n\n    switch (icon) {\n      case \"clear-day\":\n        link = \"clear-day.png\";\n        break;\n\n      case \"clear-night\":\n        link = \"clear-night.png\";\n        break;\n\n      case \"rain\":\n        link = \"rain.png\";\n        break;\n\n      case \"snow\":\n        link = \"snow.png\";\n        break;\n\n      case \"sleet\":\n        link = \"sleet.png\";\n        break;\n\n      case \"wind\":\n        link = \"wind.png\";\n        break;\n\n      case \"fog\":\n        link = \"fog.png\";\n        break;\n\n      case \"cloudy\":\n        link = \"cloudy.png\";\n        break;\n\n      case \"partly-cloudy-day\":\n        link = \"partly-cloudy-day.png\";\n        break;\n\n      case \"partly-cloudy-night\":\n        link = \"partly-cloudy-night.png\";\n        break;\n    }\n\n    setIcon(link);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"hour-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"hour\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, compHour), React.createElement(\"img\", {\n    src: window.location.origin + `/imgs/icons/${icon}`,\n    alt: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"h6\", {\n    className: \"temp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, fToC(hour.temperature), \"\\xB0\"));\n};\n\nexport default Hourly;","map":{"version":3,"sources":["/Users/gauthierdelalleau/Desktop/weather-app/src/components/Hourly.js"],"names":["React","useState","useEffect","Hourly","hour","fToC","time","Date","compHour","getHours","icon","setIcon","getIcon","link","window","location","origin","temperature"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AACjC,QAAM,CAACC,IAAD,IAASL,QAAQ,CAAC,IAAIM,IAAJ,CAASH,IAAI,CAACE,IAAL,GAAY,IAArB,CAAD,CAAvB;AACA,QAAM,CAACE,QAAD,IAAaP,QAAQ,CAACK,IAAI,CAACG,QAAL,EAAD,CAA3B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,mBAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACR,IAAI,CAACM,IAAN,CAAP;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAME,OAAO,GAAIF,IAAD,IAAU;AACxB,QAAIG,IAAI,GAAG,mBAAX;;AACA,YAAQH,IAAR;AACE,WAAK,WAAL;AAAkBG,QAAAA,IAAI,GAAG,eAAP;AAChB;;AACF,WAAK,aAAL;AAAoBA,QAAAA,IAAI,GAAG,iBAAP;AAClB;;AACF,WAAK,MAAL;AAAaA,QAAAA,IAAI,GAAG,UAAP;AACX;;AACF,WAAK,MAAL;AAAaA,QAAAA,IAAI,GAAG,UAAP;AACX;;AACF,WAAK,OAAL;AAAcA,QAAAA,IAAI,GAAG,WAAP;AACZ;;AACF,WAAK,MAAL;AAAaA,QAAAA,IAAI,GAAG,UAAP;AACX;;AACF,WAAK,KAAL;AAAYA,QAAAA,IAAI,GAAG,SAAP;AACV;;AACF,WAAK,QAAL;AAAeA,QAAAA,IAAI,GAAG,YAAP;AACb;;AACF,WAAK,mBAAL;AAA0BA,QAAAA,IAAI,GAAG,uBAAP;AACxB;;AACF,WAAK,qBAAL;AAA4BA,QAAAA,IAAI,GAAG,yBAAP;AAC1B;AApBJ;;AAuBAF,IAAAA,OAAO,CAACE,IAAD,CAAP;AACD,GA1BD;;AA4BA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBL,QAAtB,CADF,EAEE;AAAK,IAAA,GAAG,EAAEM,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAA0B,eAAcN,IAAK,EAAvD;AAA0D,IAAA,GAAG,EAAEA,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBL,IAAI,CAACD,IAAI,CAACa,WAAN,CAA1B,SAHF,CADF;AAOD,CA5CD;;AA8CA,eAAed,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\n\nconst Hourly = ({ hour, fToC }) => {\n  const [time] = useState(new Date(hour.time * 1000));\n  const [compHour] = useState(time.getHours());\n  const [icon, setIcon] = useState(\"default-cloud.png\");\n\n  useEffect(() => {\n    getIcon(hour.icon);\n  }, [])\n\n  const getIcon = (icon) => {\n    let link = \"default-cloud.png\";\n    switch (icon) {\n      case \"clear-day\": link = \"clear-day.png\";\n        break;\n      case \"clear-night\": link = \"clear-night.png\";\n        break;\n      case \"rain\": link = \"rain.png\";\n        break;\n      case \"snow\": link = \"snow.png\";\n        break;\n      case \"sleet\": link = \"sleet.png\";\n        break;\n      case \"wind\": link = \"wind.png\";\n        break;\n      case \"fog\": link = \"fog.png\";\n        break;\n      case \"cloudy\": link = \"cloudy.png\";\n        break;\n      case \"partly-cloudy-day\": link = \"partly-cloudy-day.png\";\n        break;\n      case \"partly-cloudy-night\": link = \"partly-cloudy-night.png\";\n        break;\n    }\n\n    setIcon(link);\n  }\n\n  return (\n    <div className=\"hour-card\">\n      <h6 className=\"hour\">{compHour}</h6>\n      <img src={window.location.origin + `/imgs/icons/${icon}`} alt={icon} />\n      <h6 className=\"temp\">{fToC(hour.temperature)}Â°</h6>\n    </div>\n  )\n}\n\nexport default Hourly\n"]},"metadata":{},"sourceType":"module"}